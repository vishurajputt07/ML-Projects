{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "7a481f69",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "papermill": {
     "duration": 0.001992,
     "end_time": "2025-02-13T04:44:52.430949",
     "exception": false,
     "start_time": "2025-02-13T04:44:52.428957",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "aa6ebede",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-13T04:44:52.436325Z",
     "iopub.status.busy": "2025-02-13T04:44:52.435825Z",
     "iopub.status.idle": "2025-02-13T04:45:09.420710Z",
     "shell.execute_reply": "2025-02-13T04:45:09.419421Z"
    },
    "papermill": {
     "duration": 16.98981,
     "end_time": "2025-02-13T04:45:09.422704",
     "exception": false,
     "start_time": "2025-02-13T04:44:52.432894",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mean Absolute Error: 2.7429827620276708\n",
      "R² Score: -0.0024323701797612785\n",
      "Accuracy: 9.20%\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.preprocessing import LabelEncoder, StandardScaler\n",
    "from sklearn.ensemble import GradientBoostingRegressor\n",
    "from sklearn.metrics import mean_absolute_error, r2_score, accuracy_score\n",
    "\n",
    "# Load dataset\n",
    "df = pd.read_csv(\"/kaggle/input/stress-dataset/Stress Dataset _ Tutorial-1.csv\")\n",
    "\n",
    "# Encoding categorical variables\n",
    "categorical_cols = ['Gender', 'Marital_Status', 'Job_Role', 'Health_Issues', \n",
    "                    'Company_Size', 'Department', 'Burnout_Symptoms', 'Location']\n",
    "label_encoders = {col: LabelEncoder() for col in categorical_cols}\n",
    "\n",
    "for col in categorical_cols:\n",
    "    df[col] = label_encoders[col].fit_transform(df[col])\n",
    "\n",
    "# Converting boolean columns to integers\n",
    "boolean_cols = ['Remote_Work', 'Mental_Health_Leave_Taken', 'Training_Opportunities', \n",
    "                'Gender_Bias_Experienced', 'Discrimination_Experienced']\n",
    "df[boolean_cols] = df[boolean_cols].astype(int)\n",
    "\n",
    "# Splitting dataset into features and target\n",
    "X = df.drop(columns=['Stress_Level'])\n",
    "y = df['Stress_Level']\n",
    "\n",
    "# Standardizing numerical features\n",
    "scaler = StandardScaler()\n",
    "X_scaled = scaler.fit_transform(X)\n",
    "\n",
    "# Splitting into train and test sets\n",
    "X_train, X_test, y_train, y_test = train_test_split(X_scaled, y, test_size=0.2, random_state=42)\n",
    "\n",
    "# Training Gradient Boosting Regressor\n",
    "gbr_model = GradientBoostingRegressor(n_estimators=100, learning_rate=0.1, random_state=42)\n",
    "gbr_model.fit(X_train, y_train)\n",
    "\n",
    "# Making predictions\n",
    "y_pred_gbr = gbr_model.predict(X_test)\n",
    "\n",
    "# Evaluating the model\n",
    "mae_gbr = mean_absolute_error(y_test, y_pred_gbr)\n",
    "r2_gbr = r2_score(y_test, y_pred_gbr)\n",
    "accuracy = np.mean(np.round(y_pred_gbr) == y_test) * 100\n",
    "\n",
    "print(f\"Mean Absolute Error: {mae_gbr}\")\n",
    "print(f\"R² Score: {r2_gbr}\")\n",
    "print(f\"Accuracy: {accuracy:.2f}%\")\n"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 6657805,
     "sourceId": 10737411,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30886,
   "isGpuEnabled": false,
   "isInternetEnabled": false,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.12"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 20.568918,
   "end_time": "2025-02-13T04:45:10.146169",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2025-02-13T04:44:49.577251",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
